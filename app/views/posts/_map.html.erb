<div id='map'></div>

<script>
mapboxgl.accessToken = 'pk.eyJ1Ijoicm9nYW5tYyIsImEiOiJjanh6MXAzbmIwNGl2M2xwamJ6Mnh4ZGlyIn0.ci0Fq8hiU-MtsoGWVKt4Qg'
var map = new mapboxgl.Map({
container: 'map',
style: 'mapbox://styles/roganmc/cjxyz43go0h081cpccmtt9bmd',
center: [-0.09875959999999999, 51.5245287],
zoom: 16.15
});
 
map.on('load', function () {
  // Add a layer showing the places.
  $.ajax({
  type: "GET",
  url: "/stories",
  dataType: "json",
  success: function (json) {
    $.each(json.all_stories, function(body, id, address, latitude, longitude){
    
    map.addLayer({
                  "id": JSON.stringify(id.id),
                  "type": "symbol",
                  "source": {
                  "type": "geojson",
                  "data": {
                  "type": "FeatureCollection",
                  "features": [
                    //that's the badger
                  {
                  "type": "Feature",
                  "properties": {
                  "description": JSON.stringify(id.body),
                  "icon": "theatre"
                  },
                  "geometry": {
                  "type": "Point",
                  "coordinates": [id.longitude, id.latitude]
                  }
                  }]
                  }
                  },
                  "layout": {
                  "icon-image": 
                  id.choice,
                  "icon-size": 0.25,
                  "icon-allow-overlap": true
                  }
                  }); 

                    // When a click event occurs on a feature in the places layer, open a popup at the
  // location of the feature, with description HTML from its properties.
  map.on('click', JSON.stringify(id.id), function (e) {
    var coordinates = e.features[0].geometry.coordinates.slice();
    var description = e.features[0].properties.description;
    // Ensure that if the map is zoomed out such that multiple
    // copies of the feature are visible, the popup appears
    // over the copy being pointed to.
    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
    }
    new mapboxgl.Popup()
      .setLngLat(coordinates)
      .setHTML(description)
      .addTo(map);
  });
  // Change the cursor to a pointer when the mouse is over the places layer.
  map.on('mouseenter', JSON.stringify(id.id), function () {
    map.getCanvas().style.cursor = 'pointer';
  });
  // Change it back to a pointer when it leaves.
  map.on('mouseleave', JSON.stringify(id.id), function () {
    map.getCanvas().style.cursor = '';
  });
  
    });
  },
  error: function(e) {
    console.log("error" +e.message)
  }
});
// Add geolocate control to the map.
map.addControl(new mapboxgl.GeolocateControl({
positionOptions: {
enableHighAccuracy: true
},
trackUserLocation: true
}));
});
</script>




